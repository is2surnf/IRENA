
-- Generated by the database client.
CREATE TABLE compuesto_sintetizado(
    id_compuesto_sintetizado SERIAL NOT NULL,
    nombre varchar(100),
    formula text,
    propiedades text,
    descripcion text,
    PRIMARY KEY(id_compuesto_sintetizado)
);
-- Generated by the database client.
CREATE TABLE elemento(
    id_elemento SERIAL NOT NULL,
    nombre varchar(100) NOT NULL,
    simbolo varchar(10),
    numero_atomico integer,
    masa_atomica numeric(10,2),
    densidad numeric(10,2),
    estado varchar(20),
    descripcion text,
    categoria varchar(50),
    imagen_url varchar(50),
    PRIMARY KEY(id_elemento)
);
CREATE INDEX idx_elemento_simbolo ON public.elemento USING btree (simbolo);
CREATE INDEX idx_elemento_nombre ON public.elemento USING btree (nombre);

-- Generated by the database client.
CREATE TABLE logros(
    id_logro SERIAL NOT NULL,
    codigo_logro varchar(50) NOT NULL,
    nombre varchar(100) NOT NULL,
    descripcion text,
    icono varchar(50),
    puntos_requeridos integer DEFAULT 0,
    condicion_json jsonb,
    activo boolean DEFAULT true,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id_logro)
);
CREATE UNIQUE INDEX logros_codigo_logro_key ON public.logros USING btree (codigo_logro);
CREATE INDEX idx_logros_codigo ON public.logros USING btree (codigo_logro);
CREATE INDEX idx_logros_activo ON public.logros USING btree (activo);

-- Generated by the database client.
CREATE TABLE preguntas_ia(
    id_pregunta SERIAL NOT NULL,
    usuario_id integer,
    pregunta text,
    respuesta text,
    fecha timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id_pregunta),
    CONSTRAINT preguntas_ia_usuario_id_fkey FOREIGN key(usuario_id) REFERENCES usuario(id_usuario)
);

-- Generated by the database client.
CREATE TABLE progreso(
    id_progreso SERIAL NOT NULL,
    usuario_id integer,
    tipo_evento varchar(50) NOT NULL,
    descripcion text,
    puntos_ganados integer DEFAULT 0,
    datos_json jsonb,
    fecha_evento timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    sesion_id uuid,
    activo boolean DEFAULT true,
    PRIMARY KEY(id_progreso),
    CONSTRAINT progreso_usuario_id_fkey FOREIGN key(usuario_id) REFERENCES usuario(id_usuario),
    CONSTRAINT progreso_tipo_evento_check CHECK ((tipo_evento)::text = ANY ((ARRAY['simulacion_completada'::character varying, 'teoria_leida'::character varying, 'pregunta_ia'::character varying, 'ejercicio_completado'::character varying, 'nivel_alcanzado'::character varying, 'sesion_estudio'::character varying])::text[]))
);
CREATE INDEX idx_progreso_usuario ON public.progreso USING btree (usuario_id);
CREATE INDEX idx_progreso_fecha ON public.progreso USING btree (fecha_evento DESC);
CREATE INDEX idx_progreso_tipo ON public.progreso USING btree (tipo_evento);
CREATE INDEX idx_progreso_usuario_fecha ON public.progreso USING btree (usuario_id, fecha_evento DESC);
CREATE INDEX idx_progreso_sesion ON public.progreso USING btree (sesion_id);
CREATE INDEX idx_progreso_usuario_tipo_fecha ON public.progreso USING btree (usuario_id, tipo_evento, fecha_evento DESC);
CREATE INDEX idx_progreso_activo ON public.progreso USING btree (activo);

-- Generated by the database client.
CREATE TABLE reaccion(
    id_reaccion SERIAL NOT NULL,
    nombre varchar(100),
    descripcion text,
    condiciones text,
    resultado_esperado text,
    PRIMARY KEY(id_reaccion)
);

-- Generated by the database client.
CREATE TABLE reaccion_elemento(
    id_reaccion_elemento SERIAL NOT NULL,
    reaccion_id integer,
    elemento_id integer,
    rol varchar(50),
    PRIMARY KEY(id_reaccion_elemento),
    CONSTRAINT reaccion_elemento_reaccion_id_fkey FOREIGN key(reaccion_id) REFERENCES reaccion(id_reaccion),
    CONSTRAINT reaccion_elemento_elemento_id_fkey FOREIGN key(elemento_id) REFERENCES elemento(id_elemento)
);

-- Generated by the database client.
CREATE TABLE sesiones_estudio(
    id_sesion uuid NOT NULL DEFAULT gen_random_uuid(),
    usuario_id integer,
    fecha_inicio timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    fecha_fin timestamp without time zone,
    duracion_minutos integer,
    actividades_realizadas integer DEFAULT 0,
    puntos_sesion integer DEFAULT 0,
    tipo_actividad_principal varchar(50),
    dispositivo varchar(50),
    activa boolean DEFAULT true,
    PRIMARY KEY(id_sesion),
    CONSTRAINT sesiones_estudio_usuario_id_fkey FOREIGN key(usuario_id) REFERENCES usuario(id_usuario)
);

-- Generated by the database client.
CREATE TABLE simulacion(
    id_simulacion SERIAL NOT NULL,
    usuario_id integer,
    nombre varchar(100),
    fecha timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    descripcion text,
    estado varchar(20) DEFAULT 'En proceso'::character varying,
    duracion_minutos integer,
    puntos_obtenidos integer DEFAULT 0,
    tipo_simulacion varchar(50) DEFAULT 'General'::character varying,
    PRIMARY KEY(id_simulacion),
    CONSTRAINT simulacion_usuario_id_fkey FOREIGN key(usuario_id) REFERENCES usuario(id_usuario),
    CONSTRAINT simulacion_estado_check CHECK ((estado)::text = ANY ((ARRAY['En proceso'::character varying, 'Completada'::character varying, 'Fallida'::character varying, 'Pausada'::character varying])::text[]))
);
CREATE INDEX idx_simulacion_usuario ON public.simulacion USING btree (usuario_id);
CREATE INDEX idx_simulacion_estado ON public.simulacion USING btree (estado);
CREATE INDEX idx_simulacion_fecha ON public.simulacion USING btree (fecha DESC);
CREATE INDEX idx_simulacion_usuario_estado ON public.simulacion USING btree (usuario_id, estado);

-- Generated by the database client.
CREATE TABLE simulacion_elemento(
    id_simulacion_elemento SERIAL NOT NULL,
    simulacion_id integer,
    elemento_id integer,
    cantidad numeric(10,2),
    unidad varchar(20),
    PRIMARY KEY(id_simulacion_elemento),
    CONSTRAINT simulacion_elemento_simulacion_id_fkey FOREIGN key(simulacion_id) REFERENCES simulacion(id_simulacion),
    CONSTRAINT simulacion_elemento_elemento_id_fkey FOREIGN key(elemento_id) REFERENCES elemento(id_elemento)
);
CREATE INDEX idx_sim_elem_simulacion ON public.simulacion_elemento USING btree (simulacion_id);
CREATE INDEX idx_sim_elem_elemento ON public.simulacion_elemento USING btree (elemento_id);

-- Generated by the database client.
CREATE TABLE teoria(
    id_teoria SERIAL NOT NULL,
    titulo varchar(150) NOT NULL,
    contenido text NOT NULL,
    categoria varchar(100) NOT NULL,
    tiempo_lectura integer DEFAULT 10,
    dificultad varchar(20) DEFAULT 'Básico'::character varying,
    puntos integer DEFAULT 50,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    activo boolean DEFAULT true,
    PRIMARY KEY(id_teoria),
    CONSTRAINT teoria_dificultad_check CHECK ((dificultad)::text = ANY ((ARRAY['Básico'::character varying, 'Intermedio'::character varying, 'Avanzado'::character varying])::text[]))
);
CREATE INDEX idx_teoria_categoria ON public.teoria USING btree (categoria);
CREATE INDEX idx_teoria_dificultad ON public.teoria USING btree (dificultad);
CREATE INDEX idx_teoria_activo ON public.teoria USING btree (activo);
CREATE INDEX idx_teoria_cat_dif ON public.teoria USING btree (categoria, dificultad);

-- Generated by the database client.
CREATE TABLE teoria_favoritos(
    id_favorito SERIAL NOT NULL,
    usuario_id integer,
    teoria_id integer,
    fecha_agregado timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id_favorito),
    CONSTRAINT teoria_favoritos_usuario_id_fkey FOREIGN key(usuario_id) REFERENCES usuario(id_usuario)
);
CREATE UNIQUE INDEX teoria_favoritos_usuario_id_teoria_id_key ON public.teoria_favoritos USING btree (usuario_id, teoria_id);

-- Generated by the database client.
CREATE TABLE teoria_recursos(
    id_recurso SERIAL NOT NULL,
    teoria_id integer,
    tipo_recurso varchar(50) NOT NULL,
    titulo varchar(200) NOT NULL,
    url text,
    descripcion text,
    orden integer DEFAULT 1,
    activo boolean DEFAULT true,
    PRIMARY KEY(id_recurso),
    CONSTRAINT teoria_recursos_tipo_recurso_check CHECK ((tipo_recurso)::text = ANY ((ARRAY['video'::character varying, 'imagen'::character varying, 'documento'::character varying, 'enlace'::character varying, 'simulacion'::character varying])::text[]))
);

-- Generated by the database client.
CREATE TABLE teoria_tarea_simulacion(
    id_teoria_tarea_simulacion SERIAL NOT NULL,
    teoria_id integer,
    reaccion_id integer,
    descripcion_tarea text NOT NULL,
    dificultad varchar(50) DEFAULT 'Intermedio'::character varying,
    puntos_tarea integer DEFAULT 25,
    orden integer DEFAULT 1,
    activo boolean DEFAULT true,
    PRIMARY KEY(id_teoria_tarea_simulacion),
    CONSTRAINT teoria_tarea_simulacion_teoria_id_fkey FOREIGN key(teoria_id) REFERENCES teoria(id_teoria),
    CONSTRAINT teoria_tarea_simulacion_reaccion_id_fkey FOREIGN key(reaccion_id) REFERENCES reaccion(id_reaccion),
    CONSTRAINT teoria_tarea_simulacion_dificultad_check CHECK ((dificultad)::text = ANY ((ARRAY['Fácil'::character varying, 'Intermedio'::character varying, 'Difícil'::character varying, 'Avanzado'::character varying])::text[]))
);
CREATE INDEX idx_tarea_teoria ON public.teoria_tarea_simulacion USING btree (teoria_id);
CREATE INDEX idx_tarea_orden ON public.teoria_tarea_simulacion USING btree (teoria_id, orden);
CREATE INDEX idx_tarea_activo ON public.teoria_tarea_simulacion USING btree (activo);

-- Generated by the database client.
CREATE TABLE usuario(
    id_usuario SERIAL NOT NULL,
    nombre varchar(100),
    correo varchar(100),
    tipo_usuario varchar(20),
    fecha_registro timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    ultimo_acceso timestamp without time zone,
    puntos_totales integer DEFAULT 0,
    nivel varchar(20) DEFAULT 'Principiante'::character varying,
    sesiones_completadas integer DEFAULT 0,
    PRIMARY KEY(id_usuario),
    CONSTRAINT usuario_tipo_usuario_check CHECK ((tipo_usuario)::text = ANY ((ARRAY['anonimo'::character varying, 'registrado'::character varying])::text[]))
);
CREATE UNIQUE INDEX usuario_correo_key ON public.usuario USING btree (correo);
CREATE INDEX idx_usuario_tipo ON public.usuario USING btree (tipo_usuario);
CREATE INDEX idx_usuario_nivel ON public.usuario USING btree (nivel);
CREATE INDEX idx_usuario_puntos ON public.usuario USING btree (puntos_totales DESC);

-- Generated by the database client.
CREATE TABLE usuario_logros(
    id_usuario_logro SERIAL NOT NULL,
    usuario_id integer,
    logro_id integer,
    fecha_obtenido timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    progreso_id integer,
    PRIMARY KEY(id_usuario_logro),
    CONSTRAINT usuario_logros_usuario_id_fkey FOREIGN key(usuario_id) REFERENCES usuario(id_usuario),
    CONSTRAINT usuario_logros_logro_id_fkey FOREIGN key(logro_id) REFERENCES logros(id_logro),
    CONSTRAINT usuario_logros_progreso_id_fkey FOREIGN key(progreso_id) REFERENCES progreso(id_progreso)
);
CREATE UNIQUE INDEX usuario_logros_usuario_id_logro_id_key ON public.usuario_logros USING btree (usuario_id, logro_id);
CREATE INDEX idx_usuario_logros_usuario ON public.usuario_logros USING btree (usuario_id);
CREATE INDEX idx_usuario_logros_fecha ON public.usuario_logros USING btree (fecha_obtenido DESC);

-- Generated by the database client.
CREATE TABLE usuario_teoria(
    id_usuario_teoria SERIAL NOT NULL,
    usuario_id integer,
    teoria_id integer,
    leido boolean DEFAULT false,
    fecha timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    tiempo_lectura_real integer,
    puntuacion integer,
    PRIMARY KEY(id_usuario_teoria),
    CONSTRAINT usuario_teoria_usuario_id_fkey FOREIGN key(usuario_id) REFERENCES usuario(id_usuario)
);
CREATE INDEX idx_usuario_teoria_usuario ON public.usuario_teoria USING btree (usuario_id);
CREATE INDEX idx_usuario_teoria_teoria ON public.usuario_teoria USING btree (teoria_id);
CREATE INDEX idx_usuario_teoria_leido ON public.usuario_teoria USING btree (leido);
CREATE INDEX idx_usuario_teoria_usuario_leido ON public.usuario_teoria USING btree (usuario_id, leido);

-- Generated by the database client.
CREATE TABLE utensilio(
    id_utensilio SERIAL NOT NULL,
    nombre varchar(100),
    descripcion text,
    capacidad numeric(10,2),
    tipo varchar(50),
    imagen_url text,
    PRIMARY KEY(id_utensilio)
);